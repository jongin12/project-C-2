<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <link rel="stylesheet" href="/css/match-info.css" />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
    </style>
    <title>match-info</title>
  </head>
  <body>
    <div id="root">
      <div>
        <header id="header">
          <% let team1 = matchData.info.teams[0]; let team2 =
          matchData.info.teams[1]; let team1_text = 'WIN'; let team2_text =
          'LOSE'; if(team2.win === true){ team1_text = 'LOSE'; team2_text =
          'WIN'; }; %>
          <div>BLUE</div>
          <div><%=team1_text%></div>
          <div>
            <% let time = matchData.info.gameDuration; let min =
            Math.floor(time/60); let sec = time%60; %> 
            <p>GAME TIME</p>
            <p><%=min%>:<%=sec%></p>
          </div>
          <div><%=team2_text%></div>
          <div>RED</div>
        </header>
        <main>
          <div id="game_stats">
            <div>
              <div><p><%=math.stats[2].gameEndTime%></p></div>
              <div>GAME STATS</div>
              <div><p><%=math.stats[2].queueId%></p></div>
            </div>
            <% let stats = math.stats; let team1_kda =
            stats[0].kda.k+'/'+stats[0].kda.d+'/'+stats[0].kda.a; let team2_kda
            = stats[1].kda.k+'/'+stats[1].kda.d+'/'+stats[1].kda.a; %>
            <div>
              <div>
                <div><%=team1_kda%></div>
                <div>KDA</div>
                <div><%=team2_kda%></div>
              </div>
              <div>
                <div><%=(stats[0].gold/1000).toFixed(1)%>K</div>
                <div>GOLD</div>
                <div><%=(stats[1].gold/1000).toFixed(1)%>K</div>
              </div>
              <div>
                <div><%=stats[0].tower%></div>
                <div>TOWERS</div>
                <div><%=stats[1].tower%></div>
              </div>
              <div>
                <div><%=stats[0].riftHerald%></div>
                <div>HERALDS</div>
                <div><%=stats[1].riftHerald%></div>
              </div>
              <div>
                <div>
                  <% for(let i=0; i<math.Dragon_Kill.team1.length;i++){
                    let dragon = math.Dragon_Kill.team1[i]%>
                    <img src="/img/dragon/<%=dragon%>.png">
                  <%}%>
                  <% if (math.Dragon_Kill.team1.length === 0) {%>
                    -
                  <%}%>
                </div>
                <div>DRAKES</div>
                <div>
                  <% for(let i=0; i<math.Dragon_Kill.team2.length;i++){
                    let dragon = math.Dragon_Kill.team2[i]%>
                    <img src="/img/dragon/<%=dragon%>.png">
                  <%}%>
                  <% if (math.Dragon_Kill.team2.length === 0) {%>
                    -
                  <%}%>
                </div>
              </div>
              <div>
                <div><%=stats[0].elderdragon%></div>
                <div>ELDERS</div>
                <div><%=stats[1].elderdragon%></div>
              </div>
              <div>
                <div><%=stats[0].baron%></div>
                <div>BARONS</div>
                <div><%=stats[1].baron%></div>
              </div>
              <div>
                <div>
                  <%for(let i=0;i<5;i++){%>
                  <img
                    src="<%=stats[0].ban[i]%>"
                    onerror="this.style.display='none'"
                  />
                  <%}%>
                </div>
                <div>BANS</div>
                <div>
                  <%for(let i=0;i<5;i++){%>
                  <img
                    src="<%=stats[1].ban[i]%>"
                    onerror="this.style.display='none'"
                  />
                  <%}%>
                </div>
              </div>
            </div>
          </div>
          <div>
            <div>TOTAL DAMAGE DEALT</div>
            <div id="deal">
              <%
              let barSize_arr_L = [];
              let barSize_15min_arr_L = [];
              %> <%
              for(let i=0; i<5; i++) {
                let user = matchData.info.participants[i];
                let Kdeal = Math.floor(math.deal_end[i]/100);
                let maxDeal = Math.max(...math.deal_end);
                let barSize = 18000*Kdeal/maxDeal;
                let deal_15min = math.deal_15min[i];
                let barSize_15min = 180*deal_15min/maxDeal;
                barSize_arr_L.push(barSize);
                barSize_15min_arr_L.push(barSize_15min);
              %>
              <div class="deal_left user">
                <div>
                  <img
                    src="https://ddragon.leagueoflegends.com/cdn/12.18.1/img/champion/<%=user.championName%>.png"
                  />
                </div>
                <div>
                  <div>
                    <%
                    let tier = userData[i].solo.tier;
                    let rank = userData[i].solo.rank;
                    if(rank === 'IV'){rankNum = 4;}
                    else if(rank === 'III'){rankNum = 3;}
                    else if(rank === 'II'){rankNum = 2;}
                    else if(rank === 'I'){rankNum = 1;}
                    if(tier === 'GRANDMASTER'){
                      tierRank = 'GM'
                    } else {
                      tierRank = tier.substr(0,1)+rankNum;
                    }
                    %>
                    <p><%=user.summonerName%></p>
                    <div class=""><%=tierRank%></div>
                  </div>
                  <p> <%=(Kdeal/10).toFixed(1)%>K </p>
                  <div><div></div></div>
                </div>
              </div>
              <%}%>
              <%
              let barSize_arr_R = [];
              let barSize_15min_arr_R = [];
              %>
              <% for(let i=5; i<10; i++) {
                let user = matchData.info.participants[i];
                let Kdeal = Math.floor(math.deal_end[i]/100);
                let maxDeal = Math.max(...math.deal_end);
                let barSize = 18000*Kdeal/maxDeal;
                let deal_15min = math.deal_15min[i];
                let barSize_15min = 180*deal_15min/maxDeal;
                barSize_arr_R.push(barSize);
                barSize_15min_arr_R.push(barSize_15min);
              %>
              <div class="deal_right user">
                <div>
                  <div>
                    <%
                    let tier = userData[i].solo.tier;
                    let rank = userData[i].solo.rank;
                    if(rank === 'IV'){rankNum = 4;}
                    else if(rank === 'III'){rankNum = 3;}
                    else if(rank === 'II'){rankNum = 2;}
                    else if(rank === 'I'){rankNum = 1;}
                    if(tier === 'GRANDMASTER'){
                      tierRank = 'GM'
                    } else {
                      tierRank = tier.substr(0,1)+rankNum;
                    }
                    %>
                    <div><%=tierRank%></div>
                    <p><%=user.summonerName%></p>
                  </div>
                  <p> <%=(Kdeal/10).toFixed(1)%>K </p>
                  <div><div></div></div>
                </div>
                <div>
                  <img
                    src="https://ddragon.leagueoflegends.com/cdn/12.18.1/img/champion/<%=user.championName%>.png"
                  />
                </div>
              </div>
              <%}%>
            </div>
            <div>GOLD DIFFERENCE</div>
            <div>
              <div id="gold_max_min">
                <p></p>
                <p></p>
              </div>
              <div id="gold">
                <canvas id="myChart" style="width: 450px; height:140px"></canvas>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>

    <script type="text/javascript">
      const deal_left = document.getElementsByClassName("deal_left");
      const deal_right = document.getElementsByClassName("deal_right");

      let barSize_arr_L = JSON.parse("<%- JSON.stringify(barSize_arr_L)%>");
      let barSize_15min_arr_L = JSON.parse(
        "<%- JSON.stringify(barSize_15min_arr_L)%>"
      );

      barSize_arr_L.forEach((item, index) => {
        deal_left[index].children[1].children[2].style.width = item + "px";
      });
      barSize_15min_arr_L.forEach((item, index) => {
        deal_left[index].children[1].children[2].children[0].style.width =
          item + "px";
      });

      let barSize_arr_R = JSON.parse("<%- JSON.stringify(barSize_arr_R)%>");
      let barSize_15min_arr_R = JSON.parse(
        "<%- JSON.stringify(barSize_15min_arr_R)%>"
      );

      barSize_arr_R.forEach((item, index) => {
        deal_right[index].children[0].children[2].style.width = item + "px";
      });
      barSize_15min_arr_R.forEach((item, index) => {
        deal_right[index].children[0].children[2].children[0].style.width =
          item + "px";
      });

      const header = document.getElementById('header');

      if('<%=team1_text%>' === 'WIN'){
        header.children[0].style.background = 'linear-gradient(#292E40, blue)';
        header.children[1].style.background = 'linear-gradient(#292E40, blue)';
      }
      if('<%=team2_text%>' === 'WIN'){
        header.children[3].style.background = 'linear-gradient(#292E40, red)';
        header.children[4].style.background = 'linear-gradient(#292E40, red)';
      }

      const user = document.getElementsByClassName('user');

      for(let i=0; i<5;i++){
        let button = user[i];
        let name = button.children[1].children[0].children[0].textContent;
        button.addEventListener(('click'),()=>{
        document.location.href = `/summoner/${name}`
        })
      }
      for(let i=5; i<10;i++){
        let button = user[i];
        let name = button.children[0].children[0].children[1].textContent;
        button.addEventListener(('click'),()=>{
        document.location.href = `/summoner/${name}`
        })
      }

      for(let i=0; i<5;i++){
        let tierRank = user[i].children[1].children[0].children[1].textContent;
        let tier = tierRank.substr(0,1);
        if(tier === 'I'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(121, 106, 90)'
        } else if(tier === 'B'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(161, 86, 0)'
        } else if(tier === 'S'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(226, 226, 226)'
        } else if(tier === 'G'){
          if(tierRank === 'GM'){
            user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(236, 16, 0)'
          } else {
            user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(251, 255, 0)'
          }
        } else if(tier === 'P'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(26, 223, 174)'
        } else if(tier === 'D'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(4, 164, 238)'
        } else if(tier === 'M'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(177, 0, 231)'
        } else if(tier === 'C'){
          user[i].children[1].children[0].children[1].style.backgroundColor = 'rgb(131, 231, 0)'
        }
      }
      for(let i=5; i<10;i++){
        let tierRank = user[i].children[0].children[0].children[0].textContent;
        let tier = tierRank.substr(0,1);
        if(tier === 'I'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(121, 106, 90)'
        } else if(tier === 'B'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(161, 86, 0)'
        } else if(tier === 'S'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(226, 226, 226)'
        } else if(tier === 'G'){
          if(tierRank === 'GM'){
            user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(236, 16, 0)'
          } else {
            user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(251, 255, 0)'
          }
        } else if(tier === 'P'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(26, 223, 174)'
        } else if(tier === 'D'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(4, 164, 238)'
        } else if(tier === 'M'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(177, 0, 231)'
        } else if(tier === 'C'){
          user[i].children[0].children[0].children[0].style.backgroundColor = 'rgb(131, 231, 0)'
        }
      }

      let goldData = JSON.parse("<%- JSON.stringify(math.goldDifference)%>");
      let goldTime = goldData.map((item, index) => {
        return index;
      });

      const gold_max_min = document.getElementById('gold_max_min');
      gold_max_min.children[0].textContent = (Math.max(...goldData)/1000).toFixed(1) + 'K';
      gold_max_min.children[1].textContent = (-Math.min(...goldData)/1000).toFixed(1) + 'K';

      Chart.defaults.NegativeTransparentLine = Chart.helpers.clone(
        Chart.defaults.line
      );
      Chart.controllers.NegativeTransparentLine = Chart.controllers.line.extend(
        {
          update: function () {
            // get the min and max values
            var min = Math.min.apply(null, this.chart.data.datasets[0].data);
            var max = Math.max.apply(null, this.chart.data.datasets[0].data);
            var yScale = this.getScaleForId(this.getDataset().yAxisID);

            // figure out the pixels for these and the value 0
            var top = yScale.getPixelForValue(max);
            var zero = yScale.getPixelForValue(0);
            var bottom = yScale.getPixelForValue(min);

            // build a gradient that switches color at the 0 point
            var ctx = this.chart.chart.ctx;
            var gradient = ctx.createLinearGradient(0, top, 0, bottom);
            var ratio = Math.min((zero - top) / (bottom - top), 1);
            gradient.addColorStop(0, "rgb(78, 78, 253)");
            gradient.addColorStop(ratio, "rgb(78, 78, 253)");
            gradient.addColorStop(ratio, "rgb(211, 11, 11)");
            gradient.addColorStop(1, "rgb(211, 11, 11)");
            this.chart.data.datasets[0].backgroundColor = gradient;

            return Chart.controllers.line.prototype.update.apply(
              this,
              arguments
            );
          },
        }
      );

      var context = document.getElementById("myChart").getContext("2d");
      var myChart = new Chart(context, {
        type: "NegativeTransparentLine", // 차트의 형태
        data: {
          // 차트에 들어갈 데이터
          labels: goldTime,
          datasets: [
            {
              yAxisID: "y-axis-0",
              //데이터
              label: "gold", //차트 제목
              data: goldData,
              backgroundColor: [
                //색상
                "black",
              ],
              borderColor: [
                //경계선 색상
                "white",
              ],
              borderWidth: 1, //경계선 굵기
              lineTension: 0.5,
              pointRadius: 0,
            },
          ],
        },
        options: {
          legend: false,
          animation: false,
          events: [],
          scales: {
            xAxes: [{
              ticks:{
                maxTicksLimit:6,
                fontColor:'white',
              }
            }],
            yAxes: [{
              ticks:{
                display:false,
                max:Math.max(...goldData)+100,
                min:Math.min(...goldData)-100,
              }
            }],
          }
        },
      });
    </script>
  </body>
</html>
